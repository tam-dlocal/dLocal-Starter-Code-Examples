{"ast":null,"code":"var _jsxFileName = \"/Users/mike/Documents/ReactProjects/dlocal-smartfields-demo/src/containers/checkout-container/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport configuration from \"./fieldsconfig\";\nimport Checkout from \"../../ui-components/checkout\";\nimport { executePayment } from \"../../services\";\nimport * as validators from \"../../helpers/validators\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function CheckoutContainer() {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n  const [success, setSuccess] = useState(false);\n  const [errors, setErrors] = useState({\n    name: false,\n    general: false,\n    pan: false,\n    cvv: false,\n    expiration: false\n  });\n  const [fieldsValues, setFieldsValues] = useState({\n    name: \"\"\n  });\n  const handleChange = fieldsValues => {\n    const errors = validators.validateData(configuration.validators, fieldsValues);\n    setErrors(errors);\n    setFieldsValues(fieldsValues);\n  };\n  const handleSubmit = async smartFieldsToken => {\n    try {\n      setIsLoading(true);\n      if (smartFieldsToken) {\n        const {\n          data\n        } = await executePayment({\n          smartFieldsToken,\n          name: fieldsValues.name\n        });\n        setSuccess(true);\n        setIsLoading(false);\n      } else {\n        setIsLoading(false);\n      }\n    } catch (error) {\n      setIsLoading(false);\n      setErrors({\n        ...errors,\n        general: error\n      });\n      throw error;\n    }\n  };\n  const validate = () => {\n    const errors = validators.validateData(configuration.validators, fieldsValues);\n    let hasErrors = false;\n    setErrors(errors);\n    configuration.fields.forEach(field => {\n      if (errors[field.name]) {\n        hasErrors = true;\n      }\n    });\n    return hasErrors;\n  };\n  const onReset = () => {\n    setIsLoading(false);\n    setSuccess(false);\n    setErrors({\n      name: false,\n      general: false,\n      pan: false,\n      cvv: false,\n      expiration: false\n    });\n    setFieldsValues({\n      name: \"\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Checkout, {\n    hideIcon: true,\n    showCvvHelper: true,\n    errors: errors,\n    validate: validate,\n    onSubmit: handleSubmit,\n    onChange: handleChange,\n    onReset: onReset,\n    setLoading: setIsLoading,\n    isLoading: isLoading,\n    fieldsConfig: configuration,\n    fieldsValues: fieldsValues,\n    success: success\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(CheckoutContainer, \"IwW2mndyr/vch5bMfZ7Qhw35TQE=\");\n_c = CheckoutContainer;\nvar _c;\n$RefreshReg$(_c, \"CheckoutContainer\");","map":{"version":3,"names":["React","useState","configuration","Checkout","executePayment","validators","jsxDEV","_jsxDEV","CheckoutContainer","_s","isLoading","setIsLoading","success","setSuccess","errors","setErrors","name","general","pan","cvv","expiration","fieldsValues","setFieldsValues","handleChange","validateData","handleSubmit","smartFieldsToken","data","error","validate","hasErrors","fields","forEach","field","onReset","hideIcon","showCvvHelper","onSubmit","onChange","setLoading","fieldsConfig","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/mike/Documents/ReactProjects/dlocal-smartfields-demo/src/containers/checkout-container/index.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport configuration from \"./fieldsconfig\";\nimport Checkout from \"../../ui-components/checkout\";\nimport { executePayment } from \"../../services\";\nimport * as validators from \"../../helpers/validators\";\n\nexport default function CheckoutContainer() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [success, setSuccess] = useState(false);\n  const [errors, setErrors] = useState({\n    name: false,\n    general: false,\n    pan: false,\n    cvv: false,\n    expiration: false,\n  });\n  const [fieldsValues, setFieldsValues] = useState({ name: \"\" });\n\n  const handleChange = (fieldsValues) => {\n    const errors = validators.validateData(\n      configuration.validators,\n      fieldsValues\n    );\n    setErrors(errors);\n    setFieldsValues(fieldsValues);\n  };\n\n  const handleSubmit = async (smartFieldsToken) => {\n    try {\n      setIsLoading(true);\n      if (smartFieldsToken) {\n        const { data } = await executePayment({\n          smartFieldsToken,\n          name: fieldsValues.name,\n        });\n        setSuccess(true);\n        setIsLoading(false);\n      } else {\n        setIsLoading(false);\n      }\n    } catch (error) {\n      setIsLoading(false);\n      setErrors({ ...errors, general: error });\n      throw error;\n    }\n  };\n\n  const validate = () => {\n    const errors = validators.validateData(\n      configuration.validators,\n      fieldsValues\n    );\n\n    let hasErrors = false;\n    setErrors(errors);\n\n    configuration.fields.forEach((field) => {\n      if (errors[field.name]) {\n        hasErrors = true;\n      }\n    });\n\n    return hasErrors;\n  };\n\n  const onReset = () => {\n    setIsLoading(false);\n    setSuccess(false);\n    setErrors({\n      name: false,\n      general: false,\n      pan: false,\n      cvv: false,\n      expiration: false,\n    });\n    setFieldsValues({ name: \"\" });\n  };\n\n  return (\n    <Checkout\n      hideIcon={true}\n      showCvvHelper={true}\n      errors={errors}\n      validate={validate}\n      onSubmit={handleSubmit}\n      onChange={handleChange}\n      onReset={onReset}\n      setLoading={setIsLoading}\n      isLoading={isLoading}\n      fieldsConfig={configuration}\n      fieldsValues={fieldsValues}\n      success={success}\n    />\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}